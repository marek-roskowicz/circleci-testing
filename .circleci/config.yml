# Use the latest 2.1 version of CircleCI pipeline process engine. See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1
# Use a package of configuration called an orb.
orbs:
  aws-ecs: circleci/aws-ecs@2.1.0
  aws-cli: circleci/aws-cli@1.4.1
  aws-ecr: circleci/aws-ecr@6.15.3
# Orchestrate or schedule a set of jobs

references:
  set_deploy_env: &set_deploy_env
    run:
      name: Set deployment environment
      command: |
        if [ "${CIRCLE_BRANCH}" == "staging" ]; then
            echo 'export DEPLOY_ENV=staging' >> $BASH_ENV
        elif [ "${CIRCLE_BRANCH}" == "master" ]; then
            echo 'export DEPLOY_ENV=dev' >> $BASH_ENV
        else
            echo 'export DEPLOY_ENV=dev' >> $BASH_ENV
        fi
        source $BASH_ENV

workflows:
  deploy:
    jobs:
      - build-and-push-image
      - deploy-fargate:
          requires:
            - build-and-push-image



commands:
    update-tag:
      parameters:
        module:
          type: string
          default: "api"
      steps:
        - aws-ecs/update-service:
            cluster-name: "${APP_NAME}-${DEPLOY_ENV}"
            container-image-name-updates: "container=${APP_NAME}_<<parameters.module>>,tag=${CIRCLE_SHA1}"
            family: '${DEPLOY_ENV}-<<parameters.module>>'
            service-name: "${APP_NAME}-${DEPLOY_ENV}-<<parameters.module>>"


jobs: 
  build-and-push-image:
    docker: 
      - image: amazoncorretto:15-alpine
    steps:
      - checkout
      - run: 
          name: Build java app 
          command: ./mvnw package 
      - aws-ecr/build-and-push-image:
          dockerfile: "./Dockerfile"
          tag: "${CIRCLE_SHA1}"
          repo: "marek_testing_repo"
          create-repo: true
          region: AWS_DEFAULT_REGION
          setup-remote-docker: true
  deploy-fargate:
    docker:
        - image: 'cimg/python:3.9.1'
    steps:
      - *set_deploy_env
      - run:
          command: |
            echo 'export APP_NAME=crowdcomms' >> $BASH_ENV
            echo 'export AWS_DEFAULT_REGION=us-east-1' >> $BASH_ENV
            source $BASH_ENV
      - aws-cli/setup:
            aws-access-key-id: AWS_ACCESS_KEY_ID
            aws-secret-access-key: AWS_SECRET_ACCESS_KEY
            aws-region: AWS_DEFAULT_REGION
      - update-tag:
          module: "api"
      - update-tag:
          module: "cms"
      - update-tag:
          module: "worker"
      - update-tag:
          module: "beat"           








